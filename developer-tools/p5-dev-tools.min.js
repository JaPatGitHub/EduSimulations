function logCoordinates(){stroke(255,0,0);line(mouseX,0,mouseX,height);line(0,mouseY,width,mouseY);if(mouseIsPressed){console.log(`x = ${mouseX}, y = ${mouseY}`)}}
class Slider{constructor(x,y,size,minValue,maxValue,step=1,initialValue=minValue,lineColor=[255,255,255],circleColor=[0,0,0]){this.initialX=x-size/2;this.finalX=x+size/2;this.y=y;this.minValue=minValue;this.numOfSteps=floor((maxValue-minValue)/step);this.stepSize=size/this.numOfSteps;this.value=initialValue;this.lineColor=lineColor;this.circleColor=circleColor}
show(){strokeWeight(3);stroke(...this.lineColor);line(this.initialX,this.y,this.finalX,this.y);noStroke();fill(...this.circleColor);if(mouseIsPressed&&mouseX>=this.initialX&&mouseX<=this.finalX+5&&mouseY>=this.y-10&&mouseY<=this.y+10){circle(mouseX,this.y,10);this.value=this.minValue+floor((mouseX-this.initialX)/this.stepSize)}else{let circleX=this.initialX+(this.value-this.minValue)*this.stepSize;circle(circleX,this.y,10)}}}
class PlayPauseButton{constructor(x,y,size,buttonColor=[255,255,255]){this.x=x;this.y=y;this.d=size;this.color=buttonColor;this.status=-1}
show(){strokeWeight(4);stroke(...this.color);noFill();circle(this.x,this.y,this.d);if(this.status===-1){fill(...this.color);triangle(this.x+this.d/4,this.y,this.x-this.d/8,this.y+this.d/4,this.x-this.d/8,this.y-this.d/4)}else if(this.status===1){line(this.x+this.d/6,this.y-this.d/4,this.x+this.d/6,this.y+this.d/4);line(this.x-this.d/6,this.y-this.d/4,this.x-this.d/6,this.y+this.d/4)}
if(mouseIsPressed&&dist(mouseX,mouseY,this.x,this.y)<=this.d/2&&frameCount%10===0){this.status*=-1}}}
